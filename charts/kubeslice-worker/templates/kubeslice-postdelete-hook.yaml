---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-postdelete-job
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote}}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-postdelete-job
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-postdelete-job
subjects:
  - kind: ServiceAccount
    name: kubeslice-postdelete-job
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-postdelete-job
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids/status"]
    verbs: ["get", "patch", "update"]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeslice-postdelete-job
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  kubeslice-cleanup.sh: |-
    #!/usr/bin/env bash
    NAMESPACE="spire"
    kubectl get ns $NAMESPACE -o name
    if [[ $? -eq 1 ]]; then
        echo "spire namespace was deleted successfully"
        exit 0
    fi
    echo "finding and removing spiffeids in namespace $NAMESPACE ..."
    for item in $(kubectl get spiffeid.spiffeid.spiffe.io -n $NAMESPACE -o name); do
      echo "removing item $item"
      kubectl patch $item -p '{"metadata":{"finalizers":null}}' --type=merge -n $NAMESPACE
      kubectl delete $item --ignore-not-found -n $NAMESPACE
    done

---
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeslice-postdelete-job
  namespace:  {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 3
  template:
    metadata:
      name: kubeslice-postdelete-job
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: kubeslice-postdelete-job
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/bash
            - /tmp/kubeslice-cleanup.sh
          volumeMounts:
            - mountPath: /tmp
              name: kubeslice-cleanup
      volumes:
        - name: kubeslice-cleanup
          configMap:
            name: kubeslice-postdelete-job
      restartPolicy: OnFailure
