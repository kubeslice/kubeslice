apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsm-install-crds
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote}}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nsm-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-install-crds
subjects:
  - kind: ServiceAccount
    name: nsm-install-crds
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nsm-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - patch
      - update
      - create

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-crd-install
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  crd-ns.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: networkservices.networkservicemesh.io
    spec:
      conversion:
        strategy: None
      group: networkservicemesh.io
      names:
        kind: NetworkService
        listKind: NetworkServiceList
        plural: networkservices
        shortNames:
          - netsvc
          - netsvcs
        singular: networkservice
      scope: Namespaced
      versions:
        - name: v1
          served: true
          storage: true
          schema:
            openAPIV3Schema:
              type: object
              properties:
                spec:
                  x-kubernetes-preserve-unknown-fields: true
  crd-nse.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: networkserviceendpoints.networkservicemesh.io
    spec:
      conversion:
        strategy: None
      group: networkservicemesh.io
      names:
        kind: NetworkServiceEndpoint
        listKind: NetworkServiceEndpointList
        plural: networkserviceendpoints
        shortNames:
          - nse
          - nses
        singular: networkserviceendpoint
      scope: Namespaced
      versions:
        - name: v1
          served: true
          storage: true
          schema:
            openAPIV3Schema:
              type: object
              properties:
                spec:
                  x-kubernetes-preserve-unknown-fields: true

---
apiVersion: batch/v1
kind: Job
metadata:
  name: nsm-install-crds
  namespace:  {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 3
  template:
    metadata:
      name: nsm-install-crds
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: nsm-install-crds
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp
          volumeMounts:
            - mountPath: /tmp
              name: crds
      volumes:
        - name: crds
          configMap:
            name: nsm-crd-install
      restartPolicy: OnFailure