apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-install-clusterid-cr
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote}}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-install-clusterid-cr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-install-clusterid-cr
subjects:
  - kind: ServiceAccount
    name: spire-install-clusterid-cr
    namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-install-clusterid-cr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
  - apiGroups:
      - "spire.spiffe.io"
    resources:
      - "clusterspiffeids"
    verbs:
      - get
      - list
      - patch
      - update
      - create

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-clusterid-cr-install
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  cr.yaml: |
    ---
    apiVersion: spire.spiffe.io/v1alpha1
    kind: ClusterSPIFFEID
    metadata:
      name: nsm-workloads
    spec:
      spiffeIDTemplate: "spiffe://k8s.nsm/ns/{{ printf "{{ .PodMeta.Namespace }}" }}/pod/{{ printf "{{ .PodMeta.Name }}" }}"
      podSelector:
        matchLabels:
          "spiffe.io/spiffe-id": "true"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: spire-install-clusterid-cr
  namespace:  {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "999"
  labels:
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 5
  template:
    metadata:
      name: spire-install-clusterid-cr
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: spire-install-clusterid-cr
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp/cr.yaml
          volumeMounts:
            - mountPath: /tmp
              name: cr
      volumes:
        - name: cr
          configMap:
            name: spire-clusterid-cr-install
            items:
            - key: "cr.yaml"
              path: "cr.yaml"
      restartPolicy: OnFailure
